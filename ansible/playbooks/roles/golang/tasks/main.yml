---
- name: Check if go is already installed
  ansible.builtin.command: command -v go
  register: go_exists
  ignore_errors: true
  changed_when: false

- name: Download Go binary
  ansible.builtin.get_url:
    url: "https://golang.org/dl/go{{ go_version }}.linux-arm64.tar.gz"
    dest: "/tmp/go{{ go_version }}.linux-arm64.tar.gz"
    mode: "0755"
  become: false
  when: go_exists.rc != 0

- name: Remove any existing Go installation
  ansible.builtin.file:
    path: "/usr/local/go"
    state: absent
  become: true
  when: go_exists.rc != 0

- name: Extract Go tarball
  ansible.builtin.unarchive:
    src: "/tmp/go{{ go_version }}.linux-arm64.tar.gz"
    dest: "/usr/local"
    remote_src: yes
    creates: "/usr/local/go/bin/go"
  become: true
  when: go_exists.rc != 0

- name: change go bin owner
  ansible.builtin.file:
    path: "/usr/local/go/bin"
    owner: ec2-user
    group: ec2-user
    recurse: true
    state: directory
  become: true
  when: go_exists.rc != 0

- name: Set Go environment variables globally
  ansible.builtin.blockinfile:
    path: /etc/profile.d/golang.sh
    block: |
      export GOROOT=/usr/local/go
      export GOPATH=$HOME/go
      export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin
    marker: "# {mark} ANSIBLE MANAGED BLOCK - GOLANG ENV VARS"
    create: yes
    mode: "0644"
  become: true
  when: go_exists.rc != 0

- name: Ensure GOPATH exists
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/go"
    state: directory
    owner: "ec2-user"
    group: "ec2-user"
    mode: "0755"
  become: false
  when: go_exists.rc != 0
